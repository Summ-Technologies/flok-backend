"""added company,retreat tables

Revision ID: 22727846837e
Revises: e584eafd5338
Create Date: 2021-03-18 14:32:05.017465

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '22727846837e'
down_revision = 'e584eafd5338'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies'))
    )
    op.create_table('retreats_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('INTAKE_CALL', 'EMPLOYEE_LOCATIONS', 'INITIAL_PROPOSALS', 'DESTINATION_SELECTION', 'POST_PAYMENT', name='retreatitemtype'), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('subtitle', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_retreats_items'))
    )
    op.create_table('companies_admins',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], name=op.f('fk_companies_admins_admin_id_users')),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_companies_admins_company_id_companies')),
    sa.PrimaryKeyConstraint('admin_id', 'company_id', name=op.f('pk_companies_admins'))
    )
    op.create_table('companies_employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_companies_employees_company_id_companies')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_companies_employees_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies_employees'))
    )
    op.create_table('retreats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_retreats_company_id_companies')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_retreats'))
    )
    op.create_table('retreats_to_items',
    sa.Column('retreat_id', sa.Integer(), nullable=False),
    sa.Column('retreat_item_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('TODO', 'DONE', 'IN_PROGRESS', name='retreatitemstate'), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('saved_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['retreat_id'], ['retreats.id'], name=op.f('fk_retreats_to_items_retreat_id_retreats')),
    sa.ForeignKeyConstraint(['retreat_item_id'], ['retreats_items.id'], name=op.f('fk_retreats_to_items_retreat_item_id_retreats_items')),
    sa.PrimaryKeyConstraint('retreat_id', 'retreat_item_id', name=op.f('pk_retreats_to_items'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('retreats_to_items')
    op.drop_table('retreats')
    op.drop_table('companies_employees')
    op.drop_table('companies_admins')
    op.drop_table('retreats_items')
    op.drop_table('companies')
    # ### end Alembic commands ###
