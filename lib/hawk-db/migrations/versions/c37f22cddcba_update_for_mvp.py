"""update for mvp

Revision ID: c37f22cddcba
Revises: 5e64fb05f101
Create Date: 2021-04-15 14:37:35.340395

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c37f22cddcba'
down_revision = '5e64fb05f101'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('checkout_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checkout_session_id', sa.String(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('paid', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_checkout_orders')),
    sa.UniqueConstraint('checkout_session_id', name=op.f('uq_checkout_orders_checkout_session_id'))
    )
    op.create_table('retreats_checkout_orders',
    sa.Column('retreat_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['checkout_orders.id'], name=op.f('fk_retreats_checkout_orders_order_id_checkout_orders')),
    sa.ForeignKeyConstraint(['retreat_id'], ['retreats.id'], name=op.f('fk_retreats_checkout_orders_retreat_id_retreats')),
    sa.PrimaryKeyConstraint('retreat_id', 'order_id', name=op.f('pk_retreats_checkout_orders'))
    )
    op.drop_table('retreats_to_items')
    op.drop_table('stripe_payment_intents')
    op.drop_table('retreats_items')
    op.alter_column('retreats_initial_proposals', 'body',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('retreats_initial_proposals', 'total_estimate')
    op.drop_column('retreats_initial_proposals', 'misc_estimate')
    op.drop_column('retreats_initial_proposals', 'num_nights_estimate')
    op.drop_column('retreats_initial_proposals', 'weather_prediction')
    op.drop_column('retreats_initial_proposals', 'dates_range')
    op.rename_table('retreats_initial_proposals', 'retreats_proposals')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('retreats_proposals', 'retreats_initial_proposals')
    op.add_column('retreats_initial_proposals', sa.Column('dates_range', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('retreats_initial_proposals', sa.Column('weather_prediction', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('retreats_initial_proposals', sa.Column('num_nights_estimate', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('retreats_initial_proposals', sa.Column('misc_estimate', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('retreats_initial_proposals', sa.Column('total_estimate', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('retreats_initial_proposals', 'body',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('retreats_items',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('retreats_items_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type', postgresql.ENUM('INTAKE_CALL', 'EMPLOYEE_LOCATIONS', 'INITIAL_PROPOSALS', 'DESTINATION_SELECTION', 'POST_PAYMENT', name='retreatitemtype'), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('subtitle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_retreats_items'),
    sa.UniqueConstraint('uid', name='uq_retreats_items_uid'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stripe_payment_intents',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('client_secret', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('REQUIRES_PAYMENT_METHOD', 'REQUIRES_CONFIRMATION', 'REQUIRES_ACTION', 'SUCCEEDED', 'CANCELED', name='stripepaymentintentstatus'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['stripe_customers.customer_id'], name='fk_stripe_payment_intents_customer_id_stripe_customers'),
    sa.PrimaryKeyConstraint('id', name='pk_stripe_payment_intents')
    )
    op.create_table('retreats_to_items',
    sa.Column('retreat_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('retreat_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('state', postgresql.ENUM('TODO', 'DONE', 'IN_PROGRESS', name='retreatitemstate'), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('saved_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['retreat_id'], ['retreats.id'], name='fk_retreats_to_items_retreat_id_retreats'),
    sa.ForeignKeyConstraint(['retreat_item_id'], ['retreats_items.id'], name='fk_retreats_to_items_retreat_item_id_retreats_items'),
    sa.PrimaryKeyConstraint('retreat_id', 'retreat_item_id', name='pk_retreats_to_items')
    )
    op.drop_table('retreats_checkout_orders')
    op.drop_table('checkout_orders')
    # ### end Alembic commands ###
